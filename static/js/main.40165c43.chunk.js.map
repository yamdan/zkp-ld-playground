{"version":3,"sources":["components/Doc.tsx","components/IssuerKey.tsx","components/Issuer.tsx","components/Verify.tsx","components/Credential.tsx","components/Reveal.tsx","components/CredAndReveal.tsx","utils/uri.ts","components/HiddenURIs.tsx","components/Holder.tsx","components/Presentation.tsx","components/VerifiedClaims.tsx","components/Verifier.tsx","components/ModeSwitch.tsx","data/customDocumentLoader.ts","components/Registry.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Doc","props","useState","example","setExample","Card","elevation","CardHeader","title","titleTypographyProps","variant","action","FormControl","fullWidth","sx","minWidth","InputLabel","id","Select","labelId","value","label","onChange","event","target","onExampleChange","autoWidth","style","color","mode","mui","palette","Object","keys","exampleDocs","map","k","MenuItem","CardContent","height","defaultLanguage","theme","monaco","options","lineNumbers","minimap","enabled","_","onValidate","markers","length","IssuerKey","keyID","setKeyID","exampleKeys","Person1","Person2","City","Place","exampleBls12381KeyPair1","exampleBls12381KeyPair2","exampleBls12381KeyPair3","Issuer","doc","setDoc","JSON","stringify","key","setKey","err","setErr","errOpen","setErrOpen","docValidated","setDocValidated","keyValidated","setKeyValidated","handleIssue","a","keyObj","Bls12381G2KeyPair","parse","jsigs","sign","suite","BbsTermwiseSignature2021","purpose","purposes","AssertionProofPurpose","documentLoader","expansionMap","compactProof","issuedVC","onIssue","message","Stack","Box","display","margin","alignItems","Button","onClick","justifyContent","textTransform","flexGrow","orange","direction","spacing","Avatar","bgcolor","Typography","Tooltip","disabled","padding","validated","v","Snackbar","anchorOrigin","vertical","horizontal","open","onClose","reason","Alert","severity","AlertTitle","Verify","chip","chip_color","chip_icon","chip_variant","status","Chip","icon","onVerify","index","Credential","trim","CREDENTIAL_HEIGHT","defaultValue","Reveal","CredAndReveal","Grid","item","xs","credAndReveal","cred","onCredentialChange","onCredentialValidate","credStatus","credValidated","reveal","onRevealChange","onRevealValidate","Checkbox","inputProps","e","onCheckboxChange","checked","IconButton","onDelete","isUri","uri","URL","extractUris","docs","_extractUris","res","values","push","Array","from","Set","flatMap","d","HiddenURIs","vCs","vC","rowArray","rows","i","col1","autoHeight","columns","field","headerName","width","rowHeight","checkboxSelection","onSelectionModelChange","selectedIDs","onSelectedHiddenURIsChange","filter","includes","Holder","green","Badge","badgeContent","credsAndReveals","cr","showZero","onPresent","some","revealValidated","every","overflow","container","onDeleteCredAndReveal","onCredentialAdd","selected","Presentation","vP","VerifiedClaims","selectedURI","setSelectedURI","framedClaims","setFramedClaims","useEffect","uris","derivedProofs","handleFrameIDChange","jsonld","frame","claims","console","log","readOnly","Verifier","setValidated","blue","SwitchRoot","styled","SwitchInput","SwitchThumb","encodeURIComponent","SwitchTrack","ModeSwitch","useSwitch","getInputProps","stateClasses","focusVisible","className","clsx","_prepareDocs","obj","entries","builtinDIDDocs","Map","expExampleDidDoc","expExampleDidKey","expExampleDidDoc2","expExampleDidKey2","expExampleDidDoc3","expExampleDidKey3","exampleDidDoc","exampleDidKey","exampleDid826Doc","exampleDid826Key","exampleDidb34Doc","exampleDidb34Key","builtinContexts","credentialContext","vcExampleContext","odrlContext","bbsTermwiseContext","bbsContext","jwsContext","securityV3","securityV2","securityV1","citizenVocab","schemaOrg","customLoader","documents","extendContextLoader","url","context","get","contextUrl","document","documentUrl","Error","customDocLoader","Registry","setSelected","brown","name","List","dense","maxHeight","extDocs","ListItemButton","handleSelectDoc","ListItemText","primary","path","handleChange","lightTheme","createTheme","darkTheme","App","didDocs","setDIDDocs","didDocsValidated","setDIDDocsValidated","contexts","setContexts","contextsValidated","setContextsValidated","hiddenURIs","setHiddenURIs","lastIndex","setCredsAndReveals","setVP","verificationStatus","setVerificationStatus","issuerOpen","setIssuerOpen","verifierOpen","setVerifierOpen","setMode","useMemo","parsedValidatedDIDDocs","parsedValidatedContexts","validatedDocs","handleVerifyCredential","newCredsAndReveals","verify","result","verified","handlePresent","deriveProofMulti","hiddenUris","BbsTermwiseSignatureProof2021","handleVerifyProof","verifyProofMulti","CssBaseline","AppBar","position","Toolbar","component","revealTemplate","Divider","orientation","flexItem","marginRight","Container","set","align","Link","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.40165c43.chunk.js","sourcesContent":["import Editor from \"@monaco-editor/react\";\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  SelectChangeEvent,\n} from \"@mui/material\";\nimport { useState } from \"react\";\nimport { ModeType } from \"../App\";\nimport { exampleDocs } from \"./Issuer\";\n\nexport type DocProps = {\n  value: string;\n  validated: boolean;\n  onChange: (value: string) => void;\n  onIssue: () => void;\n  onValidate: (validated: boolean) => void;\n  mode: ModeType;\n  onExampleChange: (value: string) => void;\n};\n\nexport default function Doc(props: DocProps) {\n  const [example, setExample] = useState(\"\");\n\n  const handleExampleChange = (event: SelectChangeEvent) => {\n    const value = event.target.value;\n    setExample(value);\n    props.onExampleChange(value);\n  };\n\n  return (\n    <Card elevation={3}>\n      <CardHeader\n        title=\"Input Document\"\n        titleTypographyProps={{ variant: \"subtitle1\" }}\n        action={\n          <FormControl fullWidth sx={{ minWidth: 120 }}>\n            <InputLabel id=\"document-examples-label\">Examples</InputLabel>\n            <Select\n              labelId=\"document-examples-label\"\n              id=\"document-examples\"\n              value={example}\n              label=\"Examples\"\n              onChange={handleExampleChange}\n              autoWidth\n              style={{\n                color:\n                  props.mode.mui.palette.mode === \"light\"\n                    ? \"rgba(0,0,0,.85)\"\n                    : \"rgba(255,255,255,0.85)\",\n              }}\n            >\n              {Object.keys(exampleDocs).map((k) => (\n                <MenuItem key={k} value={k}>\n                  {k}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        }\n      />\n      <CardContent>\n        <Editor\n          height=\"56vh\"\n          defaultLanguage=\"json\"\n          value={props.value}\n          theme={props.mode.monaco}\n          options={{ lineNumbers: false, minimap: { enabled: false } }}\n          onChange={(value, _) => value && props.onChange(value)}\n          onValidate={(markers) => props.onValidate(markers.length === 0)}\n        />\n      </CardContent>\n    </Card>\n  );\n}\n","import { useState } from \"react\";\nimport Editor from \"@monaco-editor/react\";\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  SelectChangeEvent,\n} from \"@mui/material\";\n\nimport { ModeType } from \"../App\";\nimport { exampleKeys } from \"./Issuer\";\n\ntype IssuerKeyProps = {\n  value: string;\n  onChange: (value: string) => void;\n  onValidate: (validated: boolean) => void;\n  mode: ModeType;\n  onExampleChange: (value: string) => void;\n};\n\nexport default function IssuerKey(props: IssuerKeyProps) {\n  const [keyID, setKeyID] = useState(\"did:example:issuer1#bbs-bls-key1\");\n\n  const handleKeyChange = (event: SelectChangeEvent) => {\n    const value = event.target.value;\n    setKeyID(value);\n    props.onExampleChange(value);\n  };\n\n  return (\n    <Card elevation={3}>\n      <CardHeader\n        title=\"Keys\"\n        titleTypographyProps={{ variant: \"subtitle1\" }}\n        action={\n          <FormControl fullWidth sx={{ minWidth: 120 }}>\n            <InputLabel id=\"signing-key-label\">signing key</InputLabel>\n            <Select\n              labelId=\"signing-key-label\"\n              id=\"signing-key\"\n              value={keyID}\n              label=\"signing key\"\n              onChange={handleKeyChange}\n              autoWidth\n              style={{\n                color:\n                  props.mode.mui.palette.mode === \"light\"\n                    ? \"rgba(0,0,0,.85)\"\n                    : \"rgba(255,255,255,0.85)\",\n              }}\n            >\n              {Object.keys(exampleKeys).map((k) => (\n                <MenuItem key={k} value={k}>\n                  {k}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        }\n      />\n      <CardContent>\n        <Editor\n          height=\"8vh\"\n          defaultLanguage=\"json\"\n          value={props.value}\n          theme={props.mode.monaco}\n          options={{ lineNumbers: false, minimap: { enabled: false } }}\n          onChange={(value, _) => value && props.onChange(value)}\n          onValidate={(markers) => props.onValidate(markers.length === 0)}\n        />\n      </CardContent>\n    </Card>\n  );\n}\n","import { useState } from \"react\";\nimport {\n  Alert,\n  AlertTitle,\n  Avatar,\n  Box,\n  Button,\n  Snackbar,\n  Stack,\n  Tooltip,\n  Typography,\n} from \"@mui/material\";\nimport CreateIcon from \"@mui/icons-material/Create\";\nimport { orange } from \"@mui/material/colors\";\nimport jsigs from \"jsonld-signatures\";\nimport {\n  Bls12381G2KeyPair,\n  BbsTermwiseSignature2021,\n} from \"@yamdan/jsonld-signatures-bbs\";\n\nimport { ModeType } from \"../App\";\nimport Doc from \"./Doc\";\nimport IssuerKey from \"./IssuerKey\";\nimport { Person1, Person2, City, Place } from \"../data/doc\";\nimport {\n  exampleBls12381KeyPair1,\n  exampleBls12381KeyPair2,\n  exampleBls12381KeyPair3,\n} from \"../data/key\";\n\nexport type IssuerProps = {\n  documentLoader: (documents: any) => any;\n  onIssue: (issued: string) => void;\n  onClick: () => void;\n  mode: ModeType;\n};\n\nexport const exampleDocs: { [key: string]: {} } = {\n  Person1: Person1,\n  Person2: Person2,\n  City: City,\n  Place: Place,\n};\n\nexport const exampleKeys: { [key: string]: {} } = {\n  \"did:example:issuer1#bbs-bls-key1\": exampleBls12381KeyPair1,\n  \"did:example:issuer2#bbs-bls-key1\": exampleBls12381KeyPair2,\n  \"did:example:issuer3#bbs-bls-key1\": exampleBls12381KeyPair3,\n};\n\nexport default function Issuer(props: IssuerProps) {\n  const [doc, setDoc] = useState(\"\");\n  const [key, setKey] = useState(\n    JSON.stringify(exampleKeys[\"did:example:issuer1#bbs-bls-key1\"], null, 2)\n  );\n  const [err, setErr] = useState(\"\");\n  const [errOpen, setErrOpen] = useState(false);\n  const [docValidated, setDocValidated] = useState(true);\n  const [keyValidated, setKeyValidated] = useState(true);\n\n  const handleDocChange = (value: string) => {\n    setDoc(value);\n  };\n\n  const handleKeyChange = (value: string) => {\n    setKey(value);\n  };\n\n  const handleExampleChange = (value: string) => {\n    setDoc(JSON.stringify(exampleDocs[value], null, 2));\n  };\n\n  const handleKeyExampleChange = (value: string) => {\n    setKey(JSON.stringify(exampleKeys[value], null, 2));\n  };\n\n  const handleIssue = async () => {\n    try {\n      const keyObj = new Bls12381G2KeyPair(JSON.parse(key));\n      const issuedVC = await jsigs.sign(JSON.parse(doc), {\n        suite: new BbsTermwiseSignature2021({ key: keyObj }),\n        purpose: new jsigs.purposes.AssertionProofPurpose(),\n        documentLoader: props.documentLoader,\n        expansionMap: false,\n        compactProof: true,\n      });\n      props.onIssue(JSON.stringify(issuedVC, null, 2));\n    } catch (e: any) {\n      setErr(e.message);\n      setErrOpen(true);\n    }\n  };\n\n  const handleErrClose = (_: any, reason: string) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setErrOpen(false);\n  };\n\n  return (\n    <Stack>\n      <Box sx={{ display: \"flex\", margin: 2, alignItems: \"center\" }}>\n        <Button\n          onClick={(_: any) => props.onClick()}\n          sx={{\n            justifyContent: \"flex-start\",\n            textTransform: \"none\",\n            flexGrow: 1,\n            color: orange[500],\n          }}\n        >\n          <Stack direction=\"row\" spacing={2} alignItems=\"center\">\n            <Avatar sx={{ bgcolor: orange[500] }} aria-label=\"issuer\">\n              <CreateIcon />\n            </Avatar>\n            <Typography>Issuer</Typography>\n          </Stack>\n        </Button>\n        <Tooltip title=\"issue\">\n          <Button\n            variant=\"contained\"\n            aria-label=\"issue\"\n            onClick={handleIssue}\n            disabled={!docValidated || !keyValidated}\n            sx={{ bgcolor: orange[500], \"&:hover\": { bgcolor: orange[600] } }}\n          >\n            Issue\n          </Button>\n        </Tooltip>\n      </Box>\n      <Box sx={{ padding: 2 }}>\n        <Doc\n          value={doc}\n          validated={docValidated}\n          mode={props.mode}\n          onChange={handleDocChange}\n          onIssue={handleIssue}\n          onValidate={(v) => setDocValidated(v)}\n          onExampleChange={handleExampleChange}\n        />\n      </Box>\n      <Box sx={{ padding: [0, 2] }}>\n        <IssuerKey\n          value={key}\n          mode={props.mode}\n          onChange={handleKeyChange}\n          onValidate={(v) => setKeyValidated(v)}\n          onExampleChange={handleKeyExampleChange}\n        />\n      </Box>\n      <Snackbar\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n        open={errOpen}\n        onClose={handleErrClose}\n      >\n        <Alert onClose={() => setErrOpen(false)} severity=\"error\">\n          <AlertTitle>Error</AlertTitle>\n          {err}\n        </Alert>\n      </Snackbar>\n    </Stack>\n  );\n}\n","import { Chip, Tooltip } from \"@mui/material\";\nimport CheckIcon from \"@mui/icons-material/Check\";\nimport ErrorIcon from \"@mui/icons-material/Error\";\nimport HelpIcon from \"@mui/icons-material/Help\";\nimport { VerificationStatus } from \"../App\";\n\ntype VerifyProps = {\n  index?: number;\n  onVerify: (index?: number) => void;\n  status: VerificationStatus;\n};\n\nexport default function Verify(props: VerifyProps) {\n  let disabled = true;\n  let chip = \"unverified\";\n  let chip_color: \"default\" | \"primary\" | \"error\" | \"warning\" = \"default\";\n  let chip_icon = <ErrorIcon />;\n  let chip_variant: \"outlined\" | \"filled\" = \"outlined\";\n  switch (props.status) {\n    case \"Accepted\":\n      disabled = false;\n      chip = \"accepted\";\n      chip_color = \"primary\";\n      chip_icon = <CheckIcon />;\n      chip_variant = \"filled\";\n      break;\n    case \"Rejected\":\n      disabled = false;\n      chip = \"rejected\";\n      chip_color = \"error\";\n      chip_icon = <ErrorIcon />;\n      chip_variant = \"filled\";\n      break;\n    case \"Unverified\":\n      disabled = false;\n      chip = \"unverified\";\n      chip_color = \"warning\";\n      chip_icon = <HelpIcon />;\n      break;\n    default:\n      break;\n  }\n\n  return (\n    <Tooltip title=\"verify\">\n      <Chip\n        variant={chip_variant}\n        icon={chip_icon}\n        label={chip}\n        color={chip_color}\n        onClick={() => props.onVerify(props.index)}\n        disabled={disabled}\n      />\n    </Tooltip>\n  );\n}\n","import Editor from \"@monaco-editor/react\";\nimport { Card, CardHeader, CardContent } from \"@mui/material\";\nimport { CREDENTIAL_HEIGHT, ModeType, VerificationStatus } from \"../App\";\nimport Verify from \"./Verify\";\n\nexport type CredentialProps = {\n  index: number;\n  value: string;\n  status: VerificationStatus;\n  validated: boolean;\n  onChange: (index: number, value: string) => void;\n  onValidate: (index: number, validated: boolean) => void;\n  onVerify: (index: number) => void;\n  mode: ModeType;\n};\n\nexport default function Credential(props: CredentialProps) {\n  return (\n    <Card elevation={3}>\n      <CardHeader\n        title={`Signed Document ${props.index + 1}`}\n        titleTypographyProps={{ variant: \"subtitle1\" }}\n        action={\n          <Verify\n            onVerify={() => props.onVerify(props.index)}\n            status={\n              props.validated && props.value.trim() !== \"\"\n                ? props.status\n                : \"Disabled\"\n            }\n          />\n        }\n      />\n      <CardContent>\n        <Editor\n          height={CREDENTIAL_HEIGHT}\n          defaultLanguage=\"json\"\n          defaultValue={props.value}\n          theme={props.mode.monaco}\n          options={{ lineNumbers: false, minimap: { enabled: false } }}\n          onChange={(value, _) => value && props.onChange(props.index, value)}\n          onValidate={(markers) =>\n            props.onValidate(props.index, markers.length === 0)\n          }\n        />\n      </CardContent>\n    </Card>\n  );\n}\n","import Editor from \"@monaco-editor/react\";\nimport { Card, CardHeader, CardContent } from \"@mui/material\";\nimport { CREDENTIAL_HEIGHT, ModeType } from \"../App\";\n\nexport type RevealProps = {\n  index: number;\n  value: string;\n  onChange: (index: number, value: string) => void;\n  onValidate: (index: number, validated: boolean) => void;\n  mode: ModeType;\n};\n\nexport default function Reveal(props: RevealProps) {\n  return (\n    <Card elevation={3}>\n      <CardHeader\n        title={`Reveal Document ${props.index + 1}`}\n        titleTypographyProps={{ variant: \"subtitle1\" }}\n      />\n      <CardContent>\n        <Editor\n          height={CREDENTIAL_HEIGHT}\n          defaultLanguage=\"json\"\n          defaultValue={props.value}\n          theme={props.mode.monaco}\n          options={{ lineNumbers: false, minimap: { enabled: false } }}\n          onChange={(value, _) => value && props.onChange(props.index, value)}\n          onValidate={(markers) =>\n            props.onValidate(props.index, markers.length === 0)\n          }\n        />\n      </CardContent>\n    </Card>\n  );\n}\n","import { Checkbox, Grid, IconButton, Stack, Tooltip } from \"@mui/material\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport Credential from \"./Credential\";\nimport Reveal from \"./Reveal\";\nimport { CredAndRevealType, ModeType } from \"../App\";\n\nexport type CredAndRevealProps = {\n  index: number;\n  credAndReveal: CredAndRevealType;\n  onCheckboxChange: (index: number, checked: boolean) => void;\n  onCredentialChange: (index: number, value: string) => void;\n  onCredentialValidate: (index: number, validated: boolean) => void;\n  onRevealChange: (index: number, value: string) => void;\n  onRevealValidate: (index: number, validated: boolean) => void;\n  onVerify: (index: number) => void;\n  onDelete: (index: number) => void;\n  mode: ModeType;\n};\n\nexport default function CredAndReveal(props: CredAndRevealProps) {\n  return (\n    <>\n      <Grid item xs={6}>\n        <Credential\n          index={props.index}\n          value={props.credAndReveal.cred}\n          onChange={(index, value) => props.onCredentialChange(index, value)}\n          onValidate={(index, validated) =>\n            props.onCredentialValidate(index, validated)\n          }\n          onVerify={(index) => props.onVerify(index)}\n          status={props.credAndReveal.credStatus}\n          validated={props.credAndReveal.credValidated}\n          mode={props.mode}\n        />\n      </Grid>\n      <Grid item xs={5}>\n        <Reveal\n          index={props.index}\n          value={props.credAndReveal.reveal}\n          onChange={(index, value) => props.onRevealChange(index, value)}\n          onValidate={(index, validated) =>\n            props.onRevealValidate(index, validated)\n          }\n          mode={props.mode}\n        />\n      </Grid>\n      <Grid item xs={1}>\n        <Stack justifyContent=\"center\">\n          <Checkbox\n            inputProps={{ \"aria-label\": \"controlled\" }}\n            onChange={(e) =>\n              props.onCheckboxChange(props.index, e.target.checked)\n            }\n          />\n          <Tooltip title=\"delete\">\n            <IconButton onClick={() => props.onDelete(props.index)}>\n              <DeleteIcon />\n            </IconButton>\n          </Tooltip>\n        </Stack>\n      </Grid>\n    </>\n  );\n}\n","export const isUri = (uri: string): boolean => {\n  try {\n    new URL(uri);\n  } catch (e) {\n    return false;\n  }\n  return true;\n};\n\nexport const extractUris = (docs: any[]): string[] => {\n  const _extractUris = (doc: any, res: string[]): void => {\n    for (const v of Object.values(doc)) {\n      if (typeof v === \"object\") {\n        _extractUris(v, res);\n      } else if (typeof v === \"string\") {\n        if (isUri(v)) res.push(v);\n      }\n    }\n  };\n\n  return Array.from(\n    new Set(\n      docs.flatMap((doc) => {\n        let d = { ...doc };\n        delete d[\"@context\"];\n        delete d[\"proof\"];\n        let res: string[] = [];\n        _extractUris(d, res);\n        return res;\n      })\n    )\n  );\n};\n","import { Card, CardContent, CardHeader } from \"@mui/material\";\nimport { DataGrid, GridColDef, GridSelectionModel } from \"@mui/x-data-grid\";\nimport { ModeType } from \"../App\";\nimport { extractUris } from \"../utils/uri\";\n\ntype HiddenURIsProps = {\n  vCs: string[];\n  onSelectedHiddenURIsChange: (selected: string[]) => void;\n  mode: ModeType;\n};\n\nexport default function HiddenURIs(props: HiddenURIsProps) {\n  const vCs = props.vCs.map((vC) => {\n    try {\n      return JSON.parse(vC);\n    } catch (e: unknown) {\n      return {};\n    }\n  });\n\n  const rowArray = extractUris(vCs);\n  const rows = rowArray.map((v, i) => ({ id: i, col1: v }));\n\n  const columns: GridColDef[] = [\n    { field: \"col1\", headerName: \"URI\", width: 600 },\n  ];\n\n  const handleSelectionModelChange = (selectedIDs: GridSelectionModel) => {\n    props.onSelectedHiddenURIsChange(\n      rowArray.filter((_, i) => selectedIDs.includes(i))\n    );\n  };\n\n  return (\n    <Card elevation={3}>\n      <CardHeader\n        title=\"URIs to be hidden\"\n        titleTypographyProps={{ variant: \"subtitle1\" }}\n      />\n      <CardContent>\n        <DataGrid\n          autoHeight\n          rows={rows}\n          columns={columns}\n          rowHeight={25}\n          checkboxSelection\n          onSelectionModelChange={handleSelectionModelChange}\n          style={{\n            color:\n              props.mode.mui.palette.mode === \"light\"\n                ? \"rgba(0,0,0,.85)\"\n                : \"rgba(255,255,255,0.85)\",\n          }}\n        />\n      </CardContent>\n    </Card>\n  );\n}\n","import {\n  Avatar,\n  Stack,\n  Tooltip,\n  Badge,\n  Box,\n  Typography,\n  Button,\n  Grid,\n} from \"@mui/material\";\nimport { green } from \"@mui/material/colors\";\nimport Add from \"@mui/icons-material/Add\";\nimport PhoneAndroidIcon from \"@mui/icons-material/PhoneAndroid\";\nimport CredAndReveal from \"./CredAndReveal\";\nimport { CredAndRevealType, ModeType } from \"../App\";\nimport HiddenURIs from \"./HiddenURIs\";\n\nexport type HolderProps = {\n  credsAndReveals: CredAndRevealType[];\n  onCredentialAdd: () => void;\n  onCheckboxChange: (index: number, checked: boolean) => void;\n  onCredentialChange: (index: number, value: string) => void;\n  onCredentialValidate: (index: number, validated: boolean) => void;\n  onRevealChange: (index: number, value: string) => void;\n  onRevealValidate: (index: number, validated: boolean) => void;\n  onVerify: (index: number) => void;\n  onPresent: () => void;\n  onClick: () => void;\n  onSelectedHiddenURIsChange: (selected: string[]) => void;\n  onDeleteCredAndReveal: (index: number) => void;\n  mode: ModeType;\n};\n\nexport default function Holder(props: HolderProps) {\n  return (\n    <Stack>\n      <Box sx={{ display: \"flex\", margin: 2, alignItems: \"center\" }}>\n        <Button\n          color=\"inherit\"\n          onClick={() => props.onClick()}\n          sx={{\n            justifyContent: \"flex-start\",\n            textTransform: \"none\",\n            flexGrow: 1,\n            color: green[500],\n          }}\n        >\n          <Stack direction=\"row\" spacing={2} alignItems=\"center\">\n            <Badge\n              badgeContent={props.credsAndReveals.filter((cr) => cr).length}\n              showZero={true}\n              color=\"primary\"\n            >\n              <Avatar sx={{ bgcolor: green[500] }} aria-label=\"holder\">\n                <PhoneAndroidIcon />\n              </Avatar>\n            </Badge>\n            <Typography>Holder</Typography>\n          </Stack>\n        </Button>\n        <Tooltip title=\"present\">\n          <span>\n            <Button\n              variant=\"contained\"\n              aria-label=\"present\"\n              onClick={() => props.onPresent()}\n              disabled={\n                props.credsAndReveals.some(\n                  (cr) =>\n                    cr.checked && !(cr.credValidated && cr.revealValidated)\n                ) || props.credsAndReveals.every((cr) => !cr.checked)\n              }\n              sx={{ bgcolor: green[500], \"&:hover\": { bgcolor: green[600] } }}\n            >\n              Present\n            </Button>\n          </span>\n        </Tooltip>\n      </Box>\n      <Box sx={{ height: \"65vh\", overflow: \"auto\", padding: 2 }}>\n        <Grid container spacing={2}>\n          {props.credsAndReveals\n            .filter((cr) => cr)\n            .map((credAndReveal) => (\n              <CredAndReveal\n                key={credAndReveal.index}\n                index={credAndReveal.index}\n                credAndReveal={credAndReveal}\n                onCheckboxChange={(index, checked) =>\n                  props.onCheckboxChange(index, checked)\n                }\n                onCredentialChange={(index, value) =>\n                  props.onCredentialChange(index, value)\n                }\n                onCredentialValidate={(index, validated) =>\n                  props.onCredentialValidate(index, validated)\n                }\n                onRevealChange={(index, value) =>\n                  props.onRevealChange(index, value)\n                }\n                onRevealValidate={(index, validated) =>\n                  props.onRevealValidate(index, validated)\n                }\n                onVerify={(index) => props.onVerify(index)}\n                onDelete={(index) => props.onDeleteCredAndReveal(index)}\n                mode={props.mode}\n              />\n            ))}\n          <Grid item xs={12}>\n            <Button fullWidth onClick={() => props.onCredentialAdd()}>\n              <Add />\n            </Button>\n          </Grid>\n        </Grid>\n      </Box>\n      <Box sx={{ height: \"25vh\", overflow: \"auto\", padding: [0, 2] }}>\n        <HiddenURIs\n          vCs={props.credsAndReveals\n            .filter((cr) => cr?.checked)\n            .map((credAndReveal) => credAndReveal.cred)}\n          onSelectedHiddenURIsChange={(selected) =>\n            props.onSelectedHiddenURIsChange(selected)\n          }\n          mode={props.mode}\n        />\n      </Box>\n    </Stack>\n  );\n}\n","import Editor from \"@monaco-editor/react\";\nimport { Card, CardHeader, CardContent } from \"@mui/material\";\nimport { ModeType, VerificationStatus } from \"../App\";\nimport Verify from \"./Verify\";\n\ntype PresentationProps = {\n  vP: string;\n  status: VerificationStatus;\n  validated: boolean;\n  onChange: (value: string) => void;\n  onValidate: (validated: boolean) => void;\n  onVerify: () => void;\n  mode: ModeType;\n};\n\nexport default function Presentation(props: PresentationProps) {\n  return (\n    <Card elevation={3}>\n      <CardHeader\n        title=\"Derived Proofs\"\n        titleTypographyProps={{ variant: \"subtitle1\" }}\n        action={\n          <Verify\n            onVerify={() => props.onVerify()}\n            status={\n              props.validated && props.vP.trim() !== \"\"\n                ? props.status\n                : \"Disabled\"\n            }\n          />\n        }\n      />\n      <CardContent>\n        <Editor\n          height=\"75vh\"\n          defaultLanguage=\"json\"\n          value={props.vP}\n          theme={props.mode.monaco}\n          options={{\n            lineNumbers: false,\n            minimap: { enabled: false },\n          }}\n          onChange={(value, _) => value && props.onChange(value)}\n          onValidate={(markers) => {\n            props.onValidate(markers.length === 0);\n          }}\n        />\n      </CardContent>\n    </Card>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport jsonld from \"jsonld\";\nimport Editor from \"@monaco-editor/react\";\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  SelectChangeEvent,\n} from \"@mui/material\";\n\nimport { ModeType, VerificationStatus } from \"../App\";\nimport { extractUris } from \"../utils/uri\";\n\ntype VerifiedClaimsProps = {\n  vP: string;\n  mode: ModeType;\n  status: VerificationStatus;\n  documentLoader: (documents: any) => any;\n};\n\nexport default function VerifiedClaims(props: VerifiedClaimsProps) {\n  const [selectedURI, setSelectedURI] = useState(\"\");\n  const [framedClaims, setFramedClaims] = useState({});\n\n  useEffect(() => {\n    setSelectedURI(\"\");\n    setFramedClaims({});\n  }, [props.vP]);\n\n  useEffect(() => {\n    if (props.status !== \"Accepted\") {\n      setSelectedURI(\"\");\n      setFramedClaims({});\n    }\n  }, [props.status]);\n\n  let uris: string[] = [];\n  if (props.status === \"Accepted\") {\n    try {\n      const derivedProofs = JSON.parse(props.vP);\n      uris = extractUris(derivedProofs);\n    } catch {\n      uris = [];\n    }\n  }\n\n  const handleFrameIDChange = async (event: SelectChangeEvent) => {\n    const uri = event.target.value;\n    setSelectedURI(uri);\n\n    let claims: any;\n    try {\n      const derivedProofs = JSON.parse(props.vP);\n      claims = await jsonld.frame(\n        derivedProofs,\n        {\n          \"@context\": derivedProofs[0][\"@context\"],\n          id: uri,\n        },\n        { documentLoader: props.documentLoader }\n      );\n    } catch (e) {\n      console.log(e);\n      claims = {};\n    }\n    setFramedClaims(claims);\n  };\n\n  return (\n    <Card elevation={3} sx={{ height: \"85vh\" }}>\n      <CardHeader\n        title=\"Verified Claims\"\n        titleTypographyProps={{ variant: \"subtitle1\" }}\n      />\n      <CardContent>\n        <FormControl fullWidth sx={{ minWidth: 120 }}>\n          <InputLabel id=\"ids-for-framing-label\">URIs for Framing</InputLabel>\n          <Select\n            labelId=\"ids-for-framing-label\"\n            id=\"ids-for-framing\"\n            value={selectedURI}\n            label=\"URIs for Framing\"\n            onChange={handleFrameIDChange}\n            autoWidth\n            style={{\n              color:\n                props.mode.mui.palette.mode === \"light\"\n                  ? \"rgba(0,0,0,.85)\"\n                  : \"rgba(255,255,255,0.85)\",\n            }}\n            disabled={props.status !== \"Accepted\"}\n          >\n            {uris.map((uri) => (\n              <MenuItem key={uri} value={uri}>\n                {uri}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n\n        <Editor\n          height=\"80vh\"\n          defaultLanguage=\"json\"\n          value={JSON.stringify(framedClaims, null, 2)}\n          theme={props.mode.monaco}\n          options={{\n            lineNumbers: false,\n            minimap: { enabled: false },\n            readOnly: true,\n          }}\n        />\n      </CardContent>\n    </Card>\n  );\n}\n","import { Avatar, Stack, Box, Button, Typography, Tooltip } from \"@mui/material\";\nimport VerifiedUserIcon from \"@mui/icons-material/VerifiedUser\";\nimport { blue } from \"@mui/material/colors\";\nimport Presentation from \"./Presentation\";\nimport { ModeType, VerificationStatus } from \"../App\";\nimport { useState } from \"react\";\nimport VerifiedClaims from \"./VerifiedClaims\";\n\ntype VerifierProps = {\n  vP: string;\n  status: VerificationStatus;\n  onVerify: () => void;\n  onChange: (value: string) => void;\n  onClick: () => void;\n  mode: ModeType;\n  documentLoader: (documents: any) => any;\n};\n\nexport default function Verifier(props: VerifierProps) {\n  const [validated, setValidated] = useState(true);\n\n  return (\n    <Stack>\n      <Box sx={{ display: \"flex\", margin: 2, alignItems: \"center\" }}>\n        <Button\n          color=\"inherit\"\n          onClick={(_: any) => props.onClick()}\n          sx={{\n            justifyContent: \"flex-start\",\n            textTransform: \"none\",\n            flexGrow: 1,\n            color: blue[500],\n          }}\n        >\n          <Stack direction=\"row\" spacing={2} alignItems=\"center\">\n            <Avatar sx={{ bgcolor: blue[500] }} aria-label=\"verifier\">\n              <VerifiedUserIcon />\n            </Avatar>\n            <Typography>Verifier</Typography>\n          </Stack>\n        </Button>\n        <Tooltip title=\"verify\">\n          <Button\n            variant=\"contained\"\n            aria-label=\"verify\"\n            onClick={() => props.onVerify()}\n            disabled={!validated}\n            sx={{ bgcolor: blue[500], \"&:hover\": { bgcolor: blue[600] } }}\n          >\n            Verify\n          </Button>\n        </Tooltip>\n      </Box>\n      <Box sx={{ height: \"85vh\", overflow: \"auto\" }}>\n        <Box sx={{ padding: 2 }}>\n          <Presentation\n            vP={props.vP}\n            status={props.status}\n            validated={validated}\n            onVerify={() => props.onVerify()}\n            onChange={(value) => props.onChange(value)}\n            onValidate={(v) => setValidated(v)}\n            mode={props.mode}\n          />\n        </Box>\n        <Box sx={{ padding: [0, 2] }}>\n          <VerifiedClaims\n            vP={props.vP}\n            mode={props.mode}\n            status={props.status}\n            documentLoader={props.documentLoader}\n          />\n        </Box>\n      </Box>\n    </Stack>\n  );\n}\n","import * as React from \"react\";\nimport clsx from \"clsx\";\nimport { styled } from \"@mui/system\";\nimport { useSwitch, UseSwitchProps } from \"@mui/core/SwitchUnstyled\";\n\nconst SwitchRoot = styled(\"span\")(`\n  display: inline-block;\n  position: relative;\n  width: 62px;\n  height: 34px;\n  padding: 7px;\n`);\n\nconst SwitchInput = styled(\"input\")(`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  opacity: 0;\n  z-index: 1;\n  margin: 0;\n  cursor: pointer;\n`);\n\nconst SwitchThumb = styled(\"span\")(\n  ({ theme }) => `\n  position: absolute;\n  display: block;\n  background-color: ${theme.palette.mode === \"dark\" ? \"#003892\" : \"#001e3c\"};\n  width: 32px;\n  height: 32px;\n  border-radius: 16px;\n  top: 1px;\n  left: 7px;\n  transition: transform 150ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:before {\n    display: block;\n    content: \"\";\n    width: 100%;\n    height: 100%;\n    background: url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 20 20\"><path fill=\"${encodeURIComponent(\n      \"#fff\"\n    )}\" d=\"M9.305 1.667V3.75h1.389V1.667h-1.39zm-4.707 1.95l-.982.982L5.09 6.072l.982-.982-1.473-1.473zm10.802 0L13.927 5.09l.982.982 1.473-1.473-.982-.982zM10 5.139a4.872 4.872 0 00-4.862 4.86A4.872 4.872 0 0010 14.862 4.872 4.872 0 0014.86 10 4.872 4.872 0 0010 5.139zm0 1.389A3.462 3.462 0 0113.471 10a3.462 3.462 0 01-3.473 3.472A3.462 3.462 0 016.527 10 3.462 3.462 0 0110 6.528zM1.665 9.305v1.39h2.083v-1.39H1.666zm14.583 0v1.39h2.084v-1.39h-2.084zM5.09 13.928L3.616 15.4l.982.982 1.473-1.473-.982-.982zm9.82 0l-.982.982 1.473 1.473.982-.982-1.473-1.473zM9.305 16.25v2.083h1.389V16.25h-1.39z\"/></svg>') center center no-repeat;\n  }\n\n  &.focusVisible {\n    background-color: #79B;\n  }\n\n  &.checked {\n    transform: translateX(16px);\n    \n    &:before {\n      background-image: url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 20 20\"><path fill=\"${encodeURIComponent(\n        \"#fff\"\n      )}\" d=\"M4.2 2.5l-.7 1.8-1.8.7 1.8.7.7 1.8.6-1.8L6.7 5l-1.9-.7-.6-1.8zm15 8.3a6.7 6.7 0 11-6.6-6.6 5.8 5.8 0 006.6 6.6z\"/></svg>');\n    }\n  }\n`\n);\n\nconst SwitchTrack = styled(\"span\")(\n  ({ theme }) => `\n  background-color: ${theme.palette.mode === \"dark\" ? \"#8796A5\" : \"#aab4be\"};\n  border-radius: 10px;\n  width: 100%;\n  height: 100%;\n  display: block;\n`\n);\n\nexport default function ModeSwitch(props: UseSwitchProps) {\n  const { getInputProps, checked, disabled, focusVisible } = useSwitch(props);\n\n  const stateClasses = {\n    checked,\n    disabled,\n    focusVisible,\n  };\n\n  return (\n    <SwitchRoot className={clsx(stateClasses)}>\n      <SwitchTrack>\n        <SwitchThumb className={clsx(stateClasses)} />\n      </SwitchTrack>\n      <SwitchInput {...getInputProps()} aria-label=\"Demo switch\" />\n    </SwitchRoot>\n  );\n}\n","import { extendContextLoader } from \"jsonld-signatures\";\n\nimport citizenVocab from \"./context/citizen_vocab.json\";\nimport credentialContext from \"./context/credential_vocab.json\";\nimport odrlContext from \"./context/odrl.json\";\nimport securityV3 from \"./context/v3_unstable.json\";\nimport securityV2 from \"./context/security-v2.json\";\nimport securityV1 from \"./context/security-v1.json\";\nimport bbsContext from \"./context/bbs.json\";\nimport jwsContext from \"./context/jws.json\";\nimport vcExampleContext from \"./context/vc_example_vocab.json\";\nimport schemaOrg from \"./context/schemaOrg.json\";\nimport bbsTermwiseContext from \"./context/bbs-termwise-2021.json\";\n\nimport exampleDidKey from \"./data/did_example_489398593_test.json\";\nimport exampleDidDoc from \"./data/did_example_489398593.json\";\nimport exampleDidb34Key from \"./data/did_example_b34ca6cd37bbf23_test.json\";\nimport exampleDidb34Doc from \"./data/did_example_b34ca6cd37bbf23.json\";\nimport exampleDid826Key from \"./data/did_example_82612387612873_test.json\";\nimport exampleDid826Doc from \"./data/did_example_82612387612873.json\";\nimport expExampleDidKey from \"./data/exp_didkey_issuer1.json\";\nimport expExampleDidDoc from \"./data/exp_diddoc_issuer1.json\";\nimport expExampleDidKey2 from \"./data/exp_didkey_issuer2.json\";\nimport expExampleDidDoc2 from \"./data/exp_diddoc_issuer2.json\";\nimport expExampleDidKey3 from \"./data/exp_didkey_issuer3.json\";\nimport expExampleDidDoc3 from \"./data/exp_diddoc_issuer3.json\";\n\nconst _prepareDocs = (obj: any): [string, string][] =>\n  Object.entries(obj).map((e: [string, any]) => [\n    e[0],\n    JSON.stringify(e[1], null, 2),\n  ]);\n\nconst _builtinDIDDocs = {\n  \"did:example:issuer1\": expExampleDidDoc,\n  \"did:example:issuer1#bbs-bls-key1\": expExampleDidKey,\n  \"did:example:issuer2\": expExampleDidDoc2,\n  \"did:example:issuer2#bbs-bls-key1\": expExampleDidKey2,\n  \"did:example:issuer3\": expExampleDidDoc3,\n  \"did:example:issuer3#bbs-bls-key1\": expExampleDidKey3,\n  \"did:example:489398593\": exampleDidDoc,\n  \"did:example:489398593#test\": exampleDidKey,\n  \"did:example:82612387612873\": exampleDid826Doc,\n  \"did:example:82612387612873#test\": exampleDid826Key,\n  \"did:example:b34ca6cd37bbf23\": exampleDidb34Doc,\n  \"did:example:b34ca6cd37bbf23#test\": exampleDidb34Key,\n};\nexport const builtinDIDDocs = new Map(_prepareDocs(_builtinDIDDocs));\n\nexport const _builtinContexts = {\n  \"https://www.w3.org/2018/credentials/v1\": credentialContext,\n  \"https://www.w3.org/2018/credentials/examples/v1\": vcExampleContext,\n  \"https://www.w3.org/ns/odrl.jsonld\": odrlContext,\n  \"https://zkp-ld.org/bbs-termwise-2021.jsonld\": bbsTermwiseContext,\n  \"https://w3id.org/security/suites/bls12381-2020/v1\": bbsContext,\n  \"https://w3id.org/security/suites/jws-2020/v1\": jwsContext,\n  \"https://w3id.org/security/bbs/v1\": bbsContext,\n  \"https://w3id.org/security/v3-unstable\": securityV3,\n  \"https://w3id.org/security/v2\": securityV2,\n  \"https://w3id.org/security/v1\": securityV1,\n  \"https://w3id.org/citizenship/v1\": citizenVocab,\n  \"https://schema.org\": schemaOrg,\n  \"https://schema.org/\": schemaOrg,\n  \"http://schema.org/\": schemaOrg,\n};\nexport const builtinContexts = new Map(_prepareDocs(_builtinContexts));\n\nconst customDocLoader =\n  (documents: Map<string, any>) =>\n  (url: string): any => {\n    const context = documents.get(url);\n    if (context) {\n      return {\n        contextUrl: null, // this is for a context via a link header\n        document: context, // this is the actual document that was loaded\n        documentUrl: url, // this is the actual context URL after redirects\n      };\n    }\n\n    throw new Error(\n      `Error attempted to load document remotely, please cache '${url}'`\n    );\n  };\n\nexport const customLoader = (documents: Map<string, any>) =>\n  extendContextLoader(customDocLoader(documents));\n","import { useState } from \"react\";\nimport {\n  Stack,\n  Box,\n  Avatar,\n  Typography,\n  List,\n  ListItemButton,\n  ListItemText,\n  Grid,\n} from \"@mui/material\";\nimport { brown } from \"@mui/material/colors\";\nimport Storage from \"@mui/icons-material/Storage\";\nimport Editor from \"@monaco-editor/react\";\n\nimport { ModeType } from \"../App\";\nimport Add from \"@mui/icons-material/Add\";\n\nexport type RegistryProps = {\n  name: string;\n  extDocs: Map<string, string>;\n  mode: ModeType;\n  onChange: (id: string, value: string) => void;\n  onValidate: (id: string, validated: boolean) => void;\n};\n\nexport default function Registry(props: RegistryProps) {\n  const [selected, setSelected] = useState(\"\");\n\n  const handleSelectDoc = (key: string) => {\n    setSelected(key);\n  };\n\n  const handleChange = (value: string) => {\n    props.onChange(selected, value);\n  };\n\n  const handleValidate = (value: boolean) => {\n    props.onValidate(selected, value);\n  };\n\n  return (\n    <Stack>\n      <Box sx={{ display: \"flex\", margin: 2, alignItems: \"center\" }}>\n        <Stack direction=\"row\" spacing={2} alignItems=\"center\">\n          <Avatar sx={{ bgcolor: brown[500] }} aria-label=\"issuer\">\n            <Storage />\n          </Avatar>\n          <Typography color={brown[500]}>{props.name}</Typography>\n        </Stack>\n      </Box>\n\n      <Box sx={{ padding: 2 }}>\n        <Grid container>\n          <Grid item xs={6}>\n            <List dense sx={{ maxHeight: \"76vh\", overflow: \"auto\" }}>\n              {Array.from(props.extDocs.keys()).map((key: string) => (\n                <ListItemButton\n                  key={`item-${key}`}\n                  selected={key === selected}\n                  onClick={(_) => handleSelectDoc(key)}\n                >\n                  <ListItemText primary={key} />\n                </ListItemButton>\n              ))}\n              {/* <ListItemButton>\n                <Add />\n              </ListItemButton> */}\n            </List>\n          </Grid>\n          <Grid item xs={6}>\n            <Editor\n              height=\"76vh\"\n              path={selected}\n              defaultLanguage=\"json\"\n              defaultValue={props.extDocs.get(selected)}\n              theme={props.mode.monaco}\n              options={{ lineNumbers: false, minimap: { enabled: false } }}\n              onChange={(value, _) => value && handleChange(value)}\n              onValidate={(markers) => {\n                handleValidate(markers.length === 0);\n              }}\n            />\n          </Grid>\n        </Grid>\n      </Box>\n    </Stack>\n  );\n}\n","import { useState, ChangeEvent, useMemo } from \"react\";\nimport {\n  Alert,\n  AlertTitle,\n  AppBar,\n  Chip,\n  CssBaseline,\n  Divider,\n  Grid,\n  Snackbar,\n  Toolbar,\n  Typography,\n  Container,\n  Tooltip,\n  Link,\n} from \"@mui/material\";\nimport { createTheme, Theme } from \"@mui/material/styles\";\nimport Warning from \"@mui/icons-material/Warning\";\nimport { ThemeProvider } from \"@emotion/react\";\nimport jsigs from \"jsonld-signatures\";\nimport {\n  BbsTermwiseSignature2021,\n  BbsTermwiseSignatureProof2021,\n  deriveProofMulti,\n  verifyProofMulti,\n} from \"@yamdan/jsonld-signatures-bbs\";\n\nimport Issuer from \"./components/Issuer\";\nimport Holder from \"./components/Holder\";\nimport Verifier from \"./components/Verifier\";\nimport ModeSwitch from \"./components/ModeSwitch\";\nimport { customLoader, builtinDIDDocs, builtinContexts } from \"./data\";\nimport { revealTemplate } from \"./data/template\";\nimport Registry from \"./components/Registry\";\n\nexport const CREDENTIAL_HEIGHT = \"40vh\";\nconst VERSION = \"v0.1.10\";\n\nconst lightTheme = createTheme({\n  palette: {\n    mode: \"light\",\n  },\n});\nconst darkTheme = createTheme({\n  palette: {\n    mode: \"dark\",\n  },\n});\nexport type ModeType = {\n  mui: Theme;\n  monaco: \"light\" | \"vs-dark\";\n};\n\nexport type CredAndRevealArrayType = {\n  lastIndex: number;\n  value: CredAndRevealType[];\n};\n\nexport type CredAndRevealType = {\n  index: number;\n  cred: string;\n  credValidated: boolean;\n  credStatus: VerificationStatus;\n  reveal: string;\n  revealValidated: boolean;\n  checked: boolean;\n};\n\nexport type VerificationStatus =\n  | \"Accepted\"\n  | \"Rejected\"\n  | \"Unverified\"\n  | \"Disabled\";\n\nfunction App() {\n  const [didDocs, setDIDDocs] = useState(builtinDIDDocs);\n  const [didDocsValidated, setDIDDocsValidated] = useState(\n    new Map([...builtinDIDDocs.keys()].map((k) => [k, true]))\n  );\n  const [contexts, setContexts] = useState(builtinContexts);\n  const [contextsValidated, setContextsValidated] = useState(\n    new Map([...builtinContexts.keys()].map((k) => [k, true]))\n  );\n  const [hiddenURIs, setHiddenURIs] = useState([] as string[]);\n  const [credsAndReveals, setCredsAndReveals] =\n    useState<CredAndRevealArrayType>({\n      lastIndex: 0,\n      value: [],\n    });\n  const [vP, setVP] = useState(\"\");\n  const [verificationStatus, setVerificationStatus] =\n    useState<VerificationStatus>(\"Unverified\");\n  const [issuerOpen, setIssuerOpen] = useState(true);\n  const [verifierOpen, setVerifierOpen] = useState(false);\n  const [err, setErr] = useState(\"\");\n  const [errOpen, setErrOpen] = useState(false);\n  const [mode, setMode] = useState<ModeType>({\n    mui: lightTheme,\n    monaco: \"light\",\n  });\n\n  const documentLoader: (documents: any) => any = useMemo(() => {\n    const validatedDIDDocs = [...didDocs.entries()].filter(([k, _]) =>\n      didDocsValidated.get(k)\n    );\n    const parsedValidatedDIDDocs: [string, any][] = validatedDIDDocs.map(\n      ([id, value]) => [id, JSON.parse(value)]\n    );\n    const validatedContexts = [...contexts.entries()].filter(([k, _]) =>\n      contextsValidated.get(k)\n    );\n    const parsedValidatedContexts: [string, any][] = validatedContexts.map(\n      ([id, value]) => [id, JSON.parse(value)]\n    );\n    const validatedDocs = new Map([\n      ...parsedValidatedDIDDocs,\n      ...parsedValidatedContexts,\n    ]);\n    return customLoader(validatedDocs);\n  }, [didDocs, didDocsValidated, contexts, contextsValidated]);\n\n  const handleErrClose = (_: any, reason: string) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setErrOpen(false);\n  };\n\n  const handleModeChange = (e: ChangeEvent<HTMLInputElement>) => {\n    if (e.target.checked) {\n      setMode({ mui: darkTheme, monaco: \"vs-dark\" });\n    } else {\n      setMode({ mui: lightTheme, monaco: \"light\" });\n    }\n  };\n\n  const handleIssue = (issuedVC: string) => {\n    let newCredsAndReveals = {\n      ...credsAndReveals,\n      lastIndex: credsAndReveals.lastIndex + 1,\n    };\n\n    newCredsAndReveals.value.push({\n      index: credsAndReveals.lastIndex,\n      cred: issuedVC,\n      reveal: JSON.stringify(revealTemplate, null, 2),\n      credValidated: true,\n      credStatus: \"Unverified\",\n      revealValidated: true,\n      checked: false,\n    });\n    setCredsAndReveals(newCredsAndReveals);\n\n    setIssuerOpen(true);\n    setVerifierOpen(false);\n  };\n\n  const handleCredentialAdd = () => {\n    let newCredsAndReveals = {\n      ...credsAndReveals,\n      lastIndex: credsAndReveals.lastIndex + 1,\n    };\n\n    newCredsAndReveals.value.push({\n      index: credsAndReveals.lastIndex,\n      cred: \"{}\",\n      reveal: JSON.stringify(revealTemplate, null, 2),\n      credValidated: true,\n      credStatus: \"Unverified\",\n      revealValidated: true,\n      checked: false,\n    });\n    setCredsAndReveals(newCredsAndReveals);\n  };\n\n  const handleCredsAndRevealsCheckboxChange = (\n    index: number,\n    checked: boolean\n  ) => {\n    let newCredsAndReveals = { ...credsAndReveals };\n    newCredsAndReveals.value[index].checked = checked;\n    setCredsAndReveals(newCredsAndReveals);\n  };\n\n  const handleCredentialChange = (index: number, value: string) => {\n    let newCredsAndReveals = { ...credsAndReveals };\n    newCredsAndReveals.value[index].cred = value;\n    newCredsAndReveals.value[index].credStatus = \"Unverified\";\n    setCredsAndReveals(newCredsAndReveals);\n  };\n\n  const handleCredentialValidate = (index: number, validated: boolean) => {\n    let newCredsAndReveals = { ...credsAndReveals };\n    newCredsAndReveals.value[index].credValidated = validated;\n    setCredsAndReveals(newCredsAndReveals);\n  };\n\n  const handleRevealChange = (index: number, value: string) => {\n    let newCredsAndReveals = { ...credsAndReveals };\n    newCredsAndReveals.value[index].reveal = value;\n    setCredsAndReveals(newCredsAndReveals);\n  };\n\n  const handleRevealValidate = (index: number, validated: boolean) => {\n    let newCredsAndReveals = { ...credsAndReveals };\n    newCredsAndReveals.value[index].revealValidated = validated;\n    setCredsAndReveals(newCredsAndReveals);\n  };\n\n  const handlePresentationChange = (value: string) => {\n    setVP(value);\n    setVerificationStatus(\"Unverified\");\n  };\n\n  const handleDIDDocsChange = (id: string, value: string) => {\n    setDIDDocs(new Map(didDocs.set(id, value)));\n  };\n\n  const handleDIDDocsValidate = (id: string, validated: boolean) => {\n    setDIDDocsValidated(new Map(didDocsValidated.set(id, validated)));\n  };\n\n  const handleContextsChange = (id: string, value: string) => {\n    setContexts(new Map(contexts.set(id, value)));\n  };\n\n  const handleContextsValidate = (id: string, validated: boolean) => {\n    setContextsValidated(new Map(contextsValidated.set(id, validated)));\n  };\n\n  const handleDeleteCredAndReveal = (index: number) => {\n    let newCredsAndReveals = { ...credsAndReveals };\n    delete newCredsAndReveals.value[index];\n    setCredsAndReveals(newCredsAndReveals);\n  };\n\n  const handleVerifyCredential = async (index: number) => {\n    const newCredsAndReveals = { ...credsAndReveals };\n    try {\n      const cred = JSON.parse(credsAndReveals.value[index].cred);\n      const result = await jsigs.verify(cred, {\n        suite: new BbsTermwiseSignature2021(),\n        purpose: new jsigs.purposes.AssertionProofPurpose(),\n        documentLoader,\n        expansionMap: false,\n        compactProof: true,\n      });\n      console.log(result);\n\n      if (result.verified === true) {\n        newCredsAndReveals.value[index].credStatus = \"Accepted\";\n      } else {\n        newCredsAndReveals.value[index].credStatus = \"Rejected\";\n      }\n      setCredsAndReveals(newCredsAndReveals);\n    } catch (e: any) {\n      newCredsAndReveals.value[index].credStatus = \"Rejected\";\n      setCredsAndReveals(newCredsAndReveals);\n      console.log(e);\n      setErr(e.message);\n      setErrOpen(true);\n    }\n  };\n\n  const handlePresent = async () => {\n    try {\n      const documents: [any, any][] = credsAndReveals.value\n        .filter((cr) => cr.checked)\n        .map((cr) => [JSON.parse(cr.cred), JSON.parse(cr.reveal)]);\n\n      const derivedProofs: any[] = await deriveProofMulti(documents, {\n        hiddenUris: hiddenURIs,\n        suite: new BbsTermwiseSignatureProof2021(),\n        documentLoader,\n      });\n\n      setVP(JSON.stringify(derivedProofs, null, 2));\n      setVerificationStatus(\"Unverified\");\n      setIssuerOpen(false);\n      setVerifierOpen(true);\n    } catch (e: any) {\n      console.log(e);\n      setErr(e.message);\n      setErrOpen(true);\n      setVP(\"\");\n    }\n  };\n\n  const handleVerifyProof = async () => {\n    try {\n      const derivedProofs = JSON.parse(vP);\n      const result = await verifyProofMulti(derivedProofs, {\n        suite: new BbsTermwiseSignatureProof2021(),\n        purpose: new jsigs.purposes.AssertionProofPurpose(),\n        documentLoader,\n        expansionMap: false,\n        compactProof: true,\n      });\n      console.log(result);\n      if (result.verified === true) {\n        setVerificationStatus(\"Accepted\");\n      } else {\n        setVerificationStatus(\"Rejected\");\n      }\n    } catch (e: any) {\n      setVerificationStatus(\"Rejected\");\n      console.log(e);\n      setErr(e.message);\n      setErrOpen(true);\n    }\n  };\n\n  return (\n    <ThemeProvider theme={mode.mui}>\n      <CssBaseline />\n      <AppBar position=\"static\" color=\"transparent\" elevation={0}>\n        <Toolbar>\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n            ZKP-LD Playground\n            <Tooltip\n              title=\"Experimental: Do not use in production. Possibly be updated or closed\n        without notification.\"\n            >\n              <Warning color=\"warning\" />\n            </Tooltip>\n          </Typography>\n          <Chip label={VERSION} />\n          <ModeSwitch onChange={handleModeChange} />\n        </Toolbar>\n      </AppBar>\n      <Grid container>\n        <Grid item xs={issuerOpen ? 4 : 1}>\n          <Issuer\n            onClick={() => setIssuerOpen(!issuerOpen)}\n            onIssue={handleIssue}\n            mode={mode}\n            documentLoader={documentLoader}\n          />\n        </Grid>\n        <Divider orientation=\"vertical\" flexItem sx={{ marginRight: \"-1px\" }} />\n        <Grid\n          item\n          xs={issuerOpen ? (verifierOpen ? 4 : 7) : verifierOpen ? 7 : 10}\n        >\n          <Holder\n            credsAndReveals={credsAndReveals.value}\n            onCredentialAdd={handleCredentialAdd}\n            onCheckboxChange={handleCredsAndRevealsCheckboxChange}\n            onCredentialChange={handleCredentialChange}\n            onCredentialValidate={handleCredentialValidate}\n            onRevealChange={handleRevealChange}\n            onRevealValidate={handleRevealValidate}\n            onVerify={handleVerifyCredential}\n            onPresent={handlePresent}\n            onClick={() => {\n              setIssuerOpen(false);\n              setVerifierOpen(false);\n            }}\n            onSelectedHiddenURIsChange={(selected) => {\n              setHiddenURIs(selected);\n            }}\n            onDeleteCredAndReveal={handleDeleteCredAndReveal}\n            mode={mode}\n          />\n        </Grid>\n        <Divider orientation=\"vertical\" flexItem sx={{ marginRight: \"-1px\" }} />\n        <Grid item xs={verifierOpen ? 4 : 1}>\n          <Verifier\n            vP={vP}\n            onVerify={handleVerifyProof}\n            status={verificationStatus}\n            onChange={handlePresentationChange}\n            onClick={() => setVerifierOpen(!verifierOpen)}\n            mode={mode}\n            documentLoader={documentLoader}\n          />\n        </Grid>\n        <Grid item xs={6}>\n          <Container>\n            <Registry\n              name=\"DIDDocuments\"\n              extDocs={didDocs}\n              mode={mode}\n              onChange={handleDIDDocsChange}\n              onValidate={handleDIDDocsValidate}\n            />\n          </Container>\n        </Grid>\n        <Divider orientation=\"vertical\" flexItem sx={{ marginRight: \"-1px\" }} />\n        <Grid item xs={6}>\n          <Container>\n            <Registry\n              name=\"Contexts\"\n              extDocs={contexts}\n              mode={mode}\n              onChange={handleContextsChange}\n              onValidate={handleContextsValidate}\n            />\n          </Container>\n        </Grid>\n      </Grid>\n      <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\">\n        <Link\n          color=\"inherit\"\n          href=\"https://github.com/yamdan/zkp-ld-playground\"\n        >\n          Source code\n        </Link>\n      </Typography>\n      <Snackbar\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n        open={errOpen}\n        onClose={handleErrClose}\n      >\n        <Alert onClose={() => setErrOpen(false)} severity=\"error\">\n          <AlertTitle>Error</AlertTitle>\n          {err}\n        </Alert>\n      </Snackbar>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}